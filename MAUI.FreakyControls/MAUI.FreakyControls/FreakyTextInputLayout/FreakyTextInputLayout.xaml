<?xml version="1.0" encoding="utf-8" ?>
<ContentView
    x:Class="Maui.FreakyControls.FreakyTextInputLayout"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:fc="clr-namespace:Maui.FreakyControls"
    x:Name="this">
    <VerticalStackLayout>
        <Grid x:Name="ctrlGrid">
            <Border x:Name="ctrlBorder"
                    BackgroundColor="{Binding ControlBackgroundColor, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    Stroke="{Binding BorderStroke, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    StrokeThickness="{Binding BorderStrokeThickness, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}">
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="{Binding BorderCornerRadius, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}" />
                </Border.StrokeShape>
                <Border.Padding>
                    <OnPlatform x:TypeArguments="Thickness">
                        <On Platform="iOS" Value="10" />
                        <On Platform="Android" Value="10,0,10,0" />
                    </OnPlatform>
                </Border.Padding>
                <fc:FreakyEntry
                    x:Name="EntryField"
                    AllowCopyPaste="{Binding AllowCopyPaste, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    CharacterSpacing="{Binding CharacterSpacing, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ClearButtonVisibility="{Binding ClearButtonVisibility, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    Completed="Handle_Completed"
                    CursorPosition="{Binding CursorPosition, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    Focused="Handle_Focused"
                    FontAttributes="{Binding FontAttributes, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    FontAutoScalingEnabled="{Binding FontAutoScalingEnabled, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    FontFamily="{Binding FontFamily, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    FontSize="{Binding FontSize, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    HorizontalTextAlignment="{Binding HorizontalTextAlignment, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ImageCommand="{Binding ImageCommand, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ImageCommandParameter="{Binding ImageCommandParameter, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ImageHeight="{Binding ImageHeight, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ImagePadding="{Binding ImagePadding, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ImageSource="{Binding ImageSource, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ImageWidth="{Binding ImageWidth, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    IsPassword="{Binding IsPassword, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    IsReadOnly="{Binding IsReadOnly, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    IsSpellCheckEnabled="{Binding IsSpellCheckEnabled, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    IsTextPredictionEnabled="{Binding IsTextPredictionEnabled, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    Keyboard="{Binding Keyboard, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    MaxLength="{Binding MaxLength, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ReturnCommand="{Binding ReturnCommand, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ReturnCommandParameter="{Binding ReturnCommand, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    ReturnType="{Binding ReturnType, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    Text="{Binding Text, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    TextChanged="EntryField_TextChanged"
                    TextColor="{Binding TextColor, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    TextTransform="{Binding TextTransform, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                    Unfocused="Handle_Unfocused"
                    PropertyChanged="EntryField_OnPropertyChanged"
                    VerticalTextAlignment="{Binding VerticalTextAlignment, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}" />
            </Border>
            <Label
                x:Name="LabelTitle"
                LineBreakMode="TailTruncation"
                HorizontalOptions="Start"
                Text="{Binding Title, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                TextColor="{Binding TitleColor, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
                VerticalOptions="Center">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="Handle_Tapped" />
                </Label.GestureRecognizers>
            </Label>
            <!-- 
                Hidden label used to precalculate the height of the title when floating 
                Then, the calculation can be done to know the correct end spot during the animation
            -->
            <Label
                x:Name="hiddenTitle"
                HorizontalOptions="Center"
                VerticalOptions="Start"
                Text=" "     
                PropertyChanged="HiddenTitle_OnPropertyChanged"
                FontSize="{Binding TitleFontSize, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}" />
        </Grid>
        <BoxView
            Margin="0,-1,0,0"
            HeightRequest="{Binding UnderlineThickness, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}"
            Color="{Binding UnderlineColor, Source={x:Reference this}, x:DataType=fc:FreakyTextInputLayout}" />
    </VerticalStackLayout>
</ContentView>